@model StatisticsServiceModel

@{
    ViewData["Title"] = "Statistics";
}

<div class="form-group">
    <label for="exercisesCombobox">Choose exercise:</label>
    <div class="dropdown">
        <input id="exercisesCombobox" class="form-control" type="text" data-toggle="dropdown" readonly>
        <ul id="exercisesDropdown" class="dropdown-menu" aria-labelledby="exercisesCombobox">
        </ul>
    </div>
</div>

<div class="text-center max-weights-div">
    <h1 class="mb-3">By maximum weight per day</h1>
    <div style="width: 800px;"><canvas id="maxWeightsGraph"></canvas></div>   
</div>

<div class="text-center max-weights-div">
    <h1 class="mb-3">By maximum score per day (weight * reps)</h1>

    <div style="width: 800px;"><canvas id="maxScoresGraph"></canvas></div>
</div>

<div id="highscoreTable">

</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let maxWeightsArray = JSON.parse('@Html.Raw(Json.Serialize(Model.UserMaxWeights))');
    let maxScoresArray = JSON.parse('@Html.Raw(Json.Serialize(Model.UserMaxScores))');
    let highScoresArray = JSON.parse('@Html.Raw(Json.Serialize(Model.UsersHighScores))');
    console.log(highScoresArray)
    let maxWeightsGraph = null;
    let maxScoresGraph = null;
    const exercisesComboboxItems = Object.keys(maxWeightsArray) || [];
    const exercisesCombobox = document.getElementById("exercisesCombobox");
    const exercisesDropdown = document.getElementById("exercisesDropdown");

    exercisesComboboxItems.forEach(function (item) {
        var li = document.createElement("li");
        var a = document.createElement("a");
        a.href = "#";
        a.innerHTML = item;
        a.addEventListener("click", () => onExerciseSelected(item));
        li.appendChild(a);
        exercisesDropdown.appendChild(li);
    });

    function onExerciseSelected(item) {
        exercisesCombobox.value = item;
        const selectedExerWeight = maxWeightsArray[item];
        const selectedExerScore = maxScoresArray[item];
        if (maxWeightsGraph) {
            maxWeightsGraph.destroy();
        }

        if (maxScoresGraph) {
            maxScoresGraph.destroy();
        }

        maxWeightsGraph = createGraph('maxWeightsGraph', selectedExerWeight.map(e => { return { date: e.date, number: e.weight } }), 'Weight');
        maxScoresGraph = createGraph('maxScoresGraph', selectedExerScore.map(e => { return { date: e.date, number: e.score } }), 'Score');
        createHighscoreTable(highScoresArray[item]);
    }

    function createGraph(id, data, label) {
       return new Chart(
            document.getElementById(id),
            {
                type: 'line',
                data: {
                    labels: data.map(row => row.date),
                    datasets: [
                        {
                            label: label,
                            data: data.map(row => row.number)
                        }
                    ]
                }
            }
        );
    }

    function createHighscoreTable(data) {
        const div = document.getElementById('highscoreTable');

        if (div.firstChild) {
            div.removeChild(div.firstChild);
        }

        let table = document.createElement('table');
        table.classList.add('table');

        let thead = document.createElement('thead');
        let headerRow = document.createElement('tr');
        let headers = ['Username', 'Weight', 'Score'];

        headers.forEach(function (headerText) {
            let th = document.createElement('th');
            th.textContent = headerText;
            headerRow.appendChild(th);
        });

        thead.appendChild(headerRow);
        table.appendChild(thead);

        let tbody = document.createElement('tbody');

        data.forEach(function (item) {
            let row = document.createElement('tr');

            let cell = document.createElement('td');
            cell.textContent = item.userName;
            row.appendChild(cell);

            cell = document.createElement('td');
            cell.textContent = item.weight;
            row.appendChild(cell);

            cell = document.createElement('td');
            cell.textContent = item.score;
            row.appendChild(cell);

            tbody.appendChild(row);
        });

        table.appendChild(tbody);
        div.appendChild(table);
    }
</script>