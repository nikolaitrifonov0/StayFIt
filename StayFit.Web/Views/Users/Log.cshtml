@model LogWorkoutForUserServiceModel

@{
    ViewData["Title"] = "Log Workout";
}

@if (!Model.HasWorkout)
{
    <div class="jumbotron">
        <h1 class="display-4">Welcome!</h1>
        <p class="lead">You haven't selected a workout. Consider <a href="/Workouts/All">Selecting one</a> or <a href="/Workouts/Add">Creating one</a></p>
        <hr class="my-4">
    </div>
}
else
{
    <div class="jumbotron">
        <h1 class="display-4">@Model.Name</h1>
        <hr class="my-4">
    </div>

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    if (Model.DisplayExercises.Count != 0)
    {
        if (Model.IsWorkdayComplete)
        {
            <p>You are done for today!</p>
        }
        else
        {
            <div class="row">
                <form method="post" class="col-6">   
                    <button type="button" class="add-set alert-success form-control mb-2 ">Add set</button>
                    @foreach (var exercise in Model.DisplayExercises)
                    {
                        <div class="row">
                            <label class="mb-2 mr-sm-2">@exercise.Value: </label>
                        </div>
                        <div class="form-inline">                            
                            <div class="row set">
                                <input type="hidden" asp-for="ExerciseIds" value="@exercise.Key" />
                                <input type="text" value="1" disabled="disabled" class="form-control mb-2 mr-sm-2 col-1 set-num" />
                                <input type="text" asp-for="Repetitions" class="form-control mb-2 mr-sm-2" placeholder="Reps">
                                <input type="text" asp-for="Weight" class="form-control mb-2" placeholder="Weight">
                            </div>
                        </div>
                    }

                    <div class="row">
                        <button type="submit" class="btn btn-primary mb-2">Submit</button>
                    </div>
                </form>

                <div class="col-6 text-center">
                    @foreach (var exercise in Model.LastWorkoutLogs)
                    {
                        <h2>@exercise.Key</h2>
                        <ul class="list-group col-5 text-center">
                            @foreach (var log in exercise.Value.OrderBy(l => l.Set))
                            {
                                <li class="list-group-item">@(log.Set). @log.Repetitions reps. @(log.Weight.HasValue ? $"{log.Weight} kg" : "")</li>
                            }
                        </ul>
                    }
                </div>
            </div>
            
        }
    }
    else
    {
        <p>Today is rest day!</p>
    }
}

<script type="text/javascript">
    let addSetBtns = document.querySelectorAll('.add-set');
    for (var btn of addSetBtns) {
        btn.onclick = (e) => {
            let divSets = e.target.parentElement.querySelectorAll('.set');

            let oldDivSet = divSets[divSets.length - 1];
            let newDivSet = oldDivSet.cloneNode(true);

            let oldSetNumber = oldDivSet.querySelector('.set-num');
            let newSetNumber = newDivSet.querySelector('.set-num');

            newSetNumber.value = Number(oldSetNumber.value) + 1;

            e.target.parentElement.querySelector('.form-inline').appendChild(newDivSet);
        }
    }
</script>
